# -*- coding: utf-8 -*-
"""Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error, mean_squared_error

# Load dataset
df = pd.read_csv("Salary_Data.csv")

# Features and target
X = df[['YearsExperience']]  # input
y = df['Salary']             # output
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict
y_pred = model.predict(X_test)

# Print coefficients
print("Slope (m):", model.coef_[0])
print("Intercept (b):", model.intercept_)

# Visualize
plt.scatter(X, y, color='blue', label='Actual Data')
plt.plot(X, model.predict(X), color='red', label='Regression Line')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.title('Salary vs Experience')
plt.legend()
plt.show()

experience =[[7]]
predicted_salary = model.predict(experience)
print(f"Predicted Salary for 7 years of experience: ${predicted_salary[0]:.2f}")

new_experience = [[1.5],[3],[6.2],[10]]
predicted_salaries= model.predict(new_experience)
for exp, salary in zip(new_experience, predicted_salaries):
    print(f"Predicted Salary for {exp[0]} years of experience: ${salary:.2f}")

mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Absolute Error: {mae:.2f}")
print(f"Mean Squared Error: {mse:.2f}")

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error, mean_squared_error,r2_score

df=pd.read_csv("/content/athlete_events.csv")
columns =pd.DataFrame(df.columns,columns=["Attributes"])
print(columns)
df=df[['Height','Weight']].dropna()
x=df[['Height']]
y=df['Weight']
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)
model=LinearRegression()
model.fit(x_train,y_train)
y_pred=model.predict(x_test)

mae=mean_absolute_error(y_test,y_pred)
mse=mean_squared_error(y_test,y_pred)
r2=r2_score(y_test,y_pred)
print(f"Mean Absolute Error: {mae:.2f}")
print(f"Mean Squared Error: {mse:.2f}")
print(f"R-squared: {r2:.2f}")

plt.scatter(x_test,y_test,color='blue',label='Actual Data')
plt.plot(x_test,y_pred,color='red',label='Regression Line')
plt.xlabel('Height (cm)')
plt.ylabel('Weight (kg)')
plt.title('Height vs Weight')
plt.legend()
plt.show()


new_data=pd.DataFrame({'Height':[170,180,190]})
predicted_weights=model.predict(new_data)
print(predicted_weights)